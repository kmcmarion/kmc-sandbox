@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Blogs>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web
@{
    Layout = "master.cshtml";
    var selection = Model.Ancestor("home");
    var home = (Home)selection;

}

<div class="container">
    <div class="row">
        <div class="col-lg-6 col-md-12">
            @Html.Raw(Model.HeadingAndSubHeading)
        </div>
        <div class="col-lg-6 col-md-12" style="min-height: 315px">
            <iframe width="100%" height="100%" src="https://www.youtube.com/embed/UXO389Vd2QI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
    </div>
</div>

<div class="container-fluid pb-0 pt-4">
    <div class="container pt-4">
        <div class="row">
            <div class="col-lg-6 col-md-12">
                <h1>KMC Community</h1>
            </div>
            <div class="col-lg-6 col-md-12">
                <div class="row">
                    <div class="col-6">Classification</div>
                    <div class="col-6">Department</div>
                    <div class="col-6">
                        <select class="form-control data-filter" id="classification">
                            <option>All</option>
                            <option>Internal</option>
                            <option>External</option>
                        </select>
                    </div>
                    <div class="col-6">
                        <select class="form-control data-filter" id="department">
                            <option>All</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
</div>

<!-- Blogs Cards -->
<div class="container-fluid" id="article-list">
    <div class="container">
        <div class="row">

            @{
                var category = "";         
                {
                    foreach (var item in Model.Children.OrderByDescending(x => x.Value("articlePublishedDate")))
                    {
                        if (item.IsDocumentType("communityArticle"))
                        {
                            var article = (CommunityArticle)item;

                            {

                                foreach ( var className in article.Classification )
                                {

                                <div class="filterDiv @category col-lg-4" data-classification="@className" data-department="@article.Department">
                                    <div class="card w-100 shadow mb-3 bg-white rounded h-100 justify-content-center">
                                        <div style="height:150px;">
                                            <a href="@article.Url">
                                                <img class="card-img-top img_object-fit"
                                                     data-src="@article.CardImage.Url"
                                                     alt="@article.CardImageAltTag" />
                                            </a>
                                        </div>

                                        <div class="card-body d-flex flex-column">
                                            <a href="@article.Url">
                                                <h3 class="text-orange">@article.PersonName</h3>
                                            </a>


                                            <p class="department">@article.Department</p>

                                            <a class="mt-auto" href="@article.Url">Learn More</a>
                                        </div>
                                    </div>
                                </div>
                                }

                            }

                        }
                    }
                }
            }
        </div>
    </div>
</div>
    
<div class="container-fluid" id="back-to-top">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-12 col-12">

            </div>

            <div class="col-lg-4 col-md-4 col-sm-12 col-12 text-center">
                <a id="back-to-top-btn" class="btn btn-primary w-100" role="button" href="#">Back To Top</a>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-12 col-12">

            </div>
        </div>
    </div>
</div>


@*Custom Content*@
@if (Model.PageTitle == "Community")
{
    @Html.Partial("~/Views/Partials/Landing Page/Career Ads Our Vision.cshtml")
}

    <div class="spacer-md"></div>

@section Scripts{
    <script defer src="~/Scripts/custom/career-ads-our-vision.js"></script>
    <script>
        var classification = document.querySelector("#classification")
        var department = document.querySelector("#department")
        var dataFilter = document.querySelectorAll(".data-filter")
        var list = document.querySelectorAll(".filterDiv")
        var parentList = document.querySelector(".row")

        function filterResult(className, deptName, data) {
            console.log(data)
            if (className == 'All' && deptName == 'All') {
                var res = Array.from(data)
            }

            if (className != 'All' && deptName == 'All') {
                var res = Array
                    .from(data) //convert dom to array
                    .filter(item => item.dataset.classification == className) //filter the result
            }

            if (className == 'All' && deptName != 'All') {
                var res = Array
                    .from(data) //convert dom to array
                    .filter(item => item.dataset.department == deptName) //filter the result
            }

            if (className != 'All' && deptName != 'All') {
                var res = Array
                    .from(data) //convert dom to array
                    .filter(item => item.dataset.classification == className && item.dataset.department == deptName) //filter the result
            }

            res.forEach(e => { //assign show class on all 
                applyFilter(e)
            })

            return res
        }

        function resetFilter() {
            list.forEach(e => e.classList.remove("show")) //Remove all show classes in list
        }

        function applyFilter(e) {
            e.classList.add("show")
        }

        function departmentList(data) {
            var depNames = new Array() //create new array
            data.forEach(element => { //loop through the DOM
                depNames.push(element.dataset.department) //put all department depNames to depNames array
            })
            var uniqueItems = new Set(depNames)

            uniqueItems.forEach(e => department.innerHTML += `<option>${e}</option>`)
        }

        departmentList(list)

        filterResult('All', 'All', list) //show all

        dataFilter.forEach(el => { //assign onchange to both filter
            el.onchange = () => {
                resetFilter()
                filterResult(classification.value, department.value, list) //get filtered data        
            }
        })
        
        @*Back to Top Functionality*@
        var btn = $('#back-to-top-btn');
        btn.on('click', function (e) {
            e.preventDefault();
            $('html, body').animate({ scrollTop: 0 }, '300');
        });
    </script>
}
