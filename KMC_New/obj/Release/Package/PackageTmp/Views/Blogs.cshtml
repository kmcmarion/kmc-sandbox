@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Blogs>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web
@{
    Layout = "master.cshtml";
    var selection = Model.Ancestor("home");
    var home = (Home)selection;

}

<div class="container-fluid"
     style="background: linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),
                                         url('@Model.FullWidthBgImage.Url');
            background-repeat: no-repeat;
            background-position: center;
            background-size: cover;
            position: relative;
            padding: 100px 0;">
    <div class="container">
        @Html.Raw(Model.HeadingAndSubHeading)
    </div>
</div>

<div class="container-fluid pb-0">
    <div class="container">
        
        <ul class="list-inline" id="categories-list">
            <li class="list-inline-item">
                <a class="category-link active" title="View All" onclick="filterSelection('all')">ALL</a>
            </li>
            <li class="list-inline-item"><a class="category-link" title="News" onclick="filterSelection('news')">NEWS</a></li>
            <li class="list-inline-item"><a class="category-link" title="Featured Articles" onclick="filterSelection('featured-articles')">FEATURED ARTICLES</a></li>
            <li class="list-inline-item"><a class="category-link" title="Client Testimonials" onclick="filterSelection('client-testimonials')">CLIENT TESTIMONIALS</a></li>
            @*<li class="list-inline-item"><a class="category-link" title="Infographics" onclick="filterSelection('infographics')">INFOGRAPHICS</a></li>*@
            @*<li class="list-inline-item"><a class="category-link" onclick="filterSelection('stories')">STORIES</a></li>*@
            @*<li class="list-inline-item"><a class="category-link" onclick="filterSelection('case-studies')">CASE STUDIES</a></li>*@
        </ul>
                    
    </div>
</div>

<!-- Blogs Cards -->
<div class="container-fluid" id="article-list">
    <div class="container">
        <div class="row">

            @{
                var category = "";         
                {
                    foreach (var item in Model.Children.OrderByDescending(x => x.Value("articlePublishedDate")))
                    {
                        if (item.IsDocumentType("article"))
                        {
                            var article = (Article)item;

                            {
                                if (article.HasValue("articleCategory"))
                                {
                                    category = string.Join(" ", article.ArticleCategory.Select(i => i).ToArray());
                                }


                                <div class="filterDiv @category">
                                    <div class="card w-100 shadow mb-3 bg-white rounded h-100 justify-content-center">
                                        <div style="height:150px;">
                                            <a href="@article.Url">
                                                <img class="card-img-top img_object-fit"
                                                     data-src="@article.CardImage.Url"
                                                     alt="@article.CardImageAltTag" />
                                            </a>
                                        </div>

                                        <div class="card-body d-flex flex-column">
                                            <p>@article.ArticlePublishedDate.ToShortDateString() | By @article.ArticleAuthor</p>
                                            <a href="@article.Url">
                                                <h3 class="text-orange">@article.CardHeading</h3>
                                            </a>

                                            <div class="spacer-sm"></div>

                                            @Html.Raw(article.CardShortDescription)
                                            <a class="mt-auto" href="@article.Url">Read More</a>
                                        </div>
                                    </div>
                                </div>

                            }

                        }
                    }
                }
            }
        </div>
    </div>
</div>
    
<div class="container-fluid" id="back-to-top">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-12 col-12">

            </div>

            <div class="col-lg-4 col-md-4 col-sm-12 col-12 text-center">
                <a id="back-to-top-btn" class="btn btn-primary w-100" role="button" href="#">Back To Top</a>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-12 col-12">

            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        filterSelection("all")

        async function filterSelection(c) {
            var x, i;
            x = document.getElementsByClassName("filterDiv");
            if (c == "all") c = "";
            for (i = 0; i < x.length; i++) {
                removeClass(x[i], "show");
                if (x[i].className.indexOf(c) > -1) addClass(x[i], "show");
            }
        }

        function addClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split(" ");
            arr2 = name.split(" ");

            for (i = 0; i < arr2.length; i++) {
                if (arr1.indexOf(arr2[i]) == -1) {
                    element.className += " " + arr2[i];

                }
                element.classList.add("col-lg-4");
            }
        }

        function removeClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split(" ");
            arr2 = name.split(" ");
            for (i = 0; i < arr2.length; i++) {
                while (arr1.indexOf(arr2[i]) > -1) {
                    arr1.splice(arr1.indexOf(arr2[i]), 1);
                }
            }
            element.className = arr1.join(" ");
        }

        var categoriesList = document.getElementById("categories-list");
        var categoryLinks = categoriesList.getElementsByClassName("category-link");
        for (var i = 0; i < categoryLinks.length; i++) {
            categoryLinks[i].addEventListener("click", function () {
                var current = document.getElementsByClassName("active");
                current[0].className = current[0].className.replace(" active", "");
                this.className += " active";
                console.log("clicked");
            });
        }
        
        @*Back to Top Functionality*@
        var btn = $('#back-to-top-btn');
        btn.on('click', function (e) {
            e.preventDefault();
            $('html, body').animate({ scrollTop: 0 }, '300');
        });
    </script>
}
